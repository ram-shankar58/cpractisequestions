#include <stdio.h>
#include <string.h>

#define MAX_SLOTS 10
#define MAX_PLATE_LEN 9

typedef struct {
    char plate[MAX_PLATE_LEN+1];
} Car;

typedef struct {
    Car slots[MAX_SLOTS];
    int num_slots;
} ParkingLot;

void initParkingLot(ParkingLot* lot) {
    for (int i = 0; i < MAX_SLOTS; i++) {
        lot->slots[i].plate[0] = '\0';  // initialize each slot to empty string
    }
    lot->num_slots = 0;
}

void printParkingLot(ParkingLot* lot) {
    printf("Parking Lot (%d slots):\n", MAX_SLOTS);
    for (int i = 0; i < lot->num_slots; i++) {
        printf("%d: %s\n", i, lot->slots[i].plate);
    }
}

void parkCar(ParkingLot* lot) {
    if (lot->num_slots == MAX_SLOTS) {
        printf("Sorry, parking lot is full.\n");
        return;
    }
    printf("Enter license plate: ");
    char plate[MAX_PLATE_LEN+1];
    scanf("%s", plate);
    strcpy(lot->slots[lot->num_slots].plate, plate);
    lot->num_slots++;
}

void leaveCar(ParkingLot* lot) {
    printf("Enter slot number to vacate: ");
    int slot;
    scanf("%d", &slot);
    if (slot < 0 || slot >= lot->num_slots) {
        printf("Invalid slot number.\n");
        return;
    }
    if (lot->slots[slot].plate[0] == '\0') {
        printf("Slot is already empty.\n");
        return;
    }
    for (int i = slot; i < lot->num_slots-1; i++) {
        strcpy(lot->slots[i].plate, lot->slots[i+1].plate);
    }
    lot->slots[lot->num_slots-1].plate[0] = '\0';
    lot->num_slots--;
}

int main() {
    ParkingLot parkingLot;
    initParkingLot(&parkingLot);

    // main loop
    while (1) {
        printParkingLot(&parkingLot);

        // display menu and ask user what to do
        printf("Menu:\n");
        printf("1. Park a car\n");
        printf("2. Leave a car\n");
        printf("3. Exit\n");
        printf("Enter your choice: ");
        int choice;
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                // park a car
                parkCar(&parkingLot);
                break;
            case 2:
                // remove a car
                leaveCar(&parkingLot);
                break;
            case 3:
                // exit program
                return 0;
            default:
                // invalid choice
                printf("Invalid choice.\n");
                break;
        }
    }
}
